import { cleanupMapboxLayerJson } from '../../BaseMap/utils/cleanupMapboxLayerJson'
import type { LegendGroup } from './layers'

export const layersIncompletness = [
  cleanupMapboxLayerJson('incomp_casing', [
    {
      layout: {
        'line-cap': 'round',
        'line-sort-key': [
          'case',
          ['match', ['get', 'proc_mandatory'], ['use_sidepath', 'optional_sidepath'], true, false],
          0,
          [
            'match',
            ['get', 'way_type'],
            ['bicycle road', 'shared bus lane', 'shared traffic lane', 'shared road'],
            true,
            false,
          ],
          2,
          1,
        ],
        visibility: 'none',
      },
      type: 'line',
      source: 'composite',
      id: 'incomp_casing',
      paint: {
        'line-width': ['interpolate', ['linear'], ['zoom'], 0, 1.4, 10, 1.4, 22, 16],
        'line-offset': [
          'interpolate',
          ['linear'],
          ['zoom'],
          0,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          10,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          22,
          ['match', ['get', 'side'], ['right'], 12, ['left'], -12, 0],
        ],
        'line-color': [
          'match',
          ['get', 'way_type'],
          [
            'shared path',
            'crossing',
            'shared footway',
            'cycle lane (protected)',
            'cycle track',
            'segregated path',
            'link',
            'cycle path',
            'track or service',
          ],
          'rgb(125, 125, 125)',
          'rgb(0, 0, 0)',
        ],
      },
      'source-layer': 'cycling_quality_index_epsg432-4roq5v',
    },
  ]),
  cleanupMapboxLayerJson('incomp_gap_background', [
    {
      layout: {
        'line-cap': 'round',
        visibility: 'none',
      },
      type: 'line',
      source: 'composite',
      id: 'incomp_gap_background',
      paint: {
        'line-width': ['interpolate', ['linear'], ['zoom'], 0, 1, 10, 1, 22, 12],
        'line-offset': [
          'interpolate',
          ['linear'],
          ['zoom'],
          0,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          10,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          22,
          ['match', ['get', 'side'], ['right'], 12, ['left'], -12, 0],
        ],
        'line-color': [
          'interpolate',
          ['linear'],
          ['get', 'data_incompleteness'],
          0,
          '#fafafa',
          10,
          '#dfdfdf',
          20,
          '#c4c4c4',
          30,
          '#a8a8a8',
          40,
          '#8d8d8d',
          50,
          '#727272',
          60,
          '#575757',
          70,
          '#3b3b3b',
          80,
          '#202020',
          90,
          '#000000',
        ],
      },
      'source-layer': 'cycling_quality_index_epsg432-4roq5v',
    },
  ]),
  cleanupMapboxLayerJson('incomp_main_colour', [
    {
      type: 'line',
      source: 'composite',
      id: 'incomp_main_colour',
      paint: {
        'line-color': [
          'interpolate',
          ['linear'],
          ['get', 'data_incompleteness'],
          0,
          '#fafafa',
          10,
          '#dfdfdf',
          20,
          '#c4c4c4',
          30,
          '#a8a8a8',
          40,
          '#8d8d8d',
          50,
          '#727272',
          60,
          '#575757',
          70,
          '#3b3b3b',
          80,
          '#202020',
          90,
          '#000000',
        ],
        'line-width': ['interpolate', ['linear'], ['zoom'], 0, 1, 10, 1, 22, 12],
        'line-offset': [
          'interpolate',
          ['linear'],
          ['zoom'],
          0,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          10,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          22,
          ['match', ['get', 'side'], ['right'], 12, ['left'], -12, 0],
        ],
      },
      'source-layer': 'cycling_quality_index_epsg432-4roq5v',
      layout: {
        'line-sort-key': [
          'step',
          ['get', 'data_incompleteness'],
          1,
          10,
          2,
          20,
          3,
          30,
          4,
          40,
          5,
          50,
          6,
          60,
          7,
          70,
          8,
          80,
          9,
          90,
          10,
          100,
          11,
        ],
        visibility: 'none',
      },
    },
  ]),
]

export const legendIncompletness: LegendGroup[] = [
  {
    title: 'Hauptkategorie',
    key: 'missing',
    primary: true,
    legends: [
      {
        key: 'm0',
        color: '#fafafa',
        label: 'Vollst√§ndige Daten',
        filterConfig: { key: 'data_incompleteness', values: [0] },
      },
      {
        key: 'm10',
        color: '#dfdfdf',
        label: 'Wenige Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [10] },
      },
      {
        key: 'm20',
        color: '#c4c4c4',
        label: 'Wenige Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [20] },
      },
      {
        key: 'm30',
        color: '#a8a8a8',
        label: 'Einige Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [30] },
      },
      {
        key: 'm40',
        color: '#8d8d8d',
        label: 'Einige Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [40] },
      },
      {
        key: 'm50',
        color: '#727272',
        label: 'Viele Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [50] },
      },
      {
        key: 'm60',
        color: '#575757',
        label: 'Viele Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [60] },
      },
      {
        key: 'm70',
        color: '#3b3b3b',
        label: 'Sehr viele Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [70] },
      },
      {
        key: 'm80',
        color: '#202020',
        label: 'Sehr viele Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [80] },
      },
      {
        key: 'm90',
        color: '#000000',
        label: 'Fast alle Daten fehlen',
        filterConfig: { key: 'data_incompleteness', values: [90] },
      },
    ],
  },
]
